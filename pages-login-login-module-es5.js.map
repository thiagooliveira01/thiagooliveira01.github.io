{"version":3,"sources":["./src/app/pages/login/cadastro/cadastro.component.html","./src/app/pages/login/login/login.component.html","./src/app/pages/login/cadastro/cadastro.component.css","./src/app/pages/login/cadastro/cadastro.component.ts","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login/login.component.css","./src/app/pages/login/login/login.component.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 70vh\\\">\\n    <aside class=\\\"col-sm-8\\\" >\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Gerenciador Financeiro - Cadastro</h5>\\n        <div class=\\\"card-text\\\">\\n          <form  [formGroup]=\\\"form\\\" (ngSubmit)=\\\"cadastrar()\\\" >\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Email\\\">E-mail</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"Email\\\" formControlName=\\\"Email\\\" placeholder=\\\"Informe o e-mail\\\" />\\n              <app-form-field-error [form-control]=\\\"form.get('Email')\\\"></app-form-field-error>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Senha</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"Password\\\" formControlName=\\\"Password\\\" placeholder=\\\"Senha\\\"/>\\n              <app-form-field-error [form-control]=\\\"form.get('Password')\\\"></app-form-field-error>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"ConfirmPassword\\\">Confirmar Senha</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"ConfirmPassword\\\" formControlName=\\\"ConfirmPassword\\\" placeholder=\\\"Confirmar Senha\\\"/>\\n                <app-form-field-error [form-control]=\\\"form.get('ConfirmPassword')\\\"></app-form-field-error>\\n              </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" [disabled]=\\\"form.invalid || submitted\\\">Cadastrar</button>\\n\\n            <div class=\\\"card-text\\\">\\n                Já é cadastrado?\\n                <a routerLink=\\\"/login\\\">clique aqui para entrar</a>\\n            </div>\\n            \\n          </form>\\n        </div>\\n        <div class=\\\"card-text\\\">\\n          <app-server-error-messages [server-error-messages]=\\\"serverErrorMessages\\\"></app-server-error-messages>\\n        </div>\\n      </div>\\n    </div>\\n  </aside>\\n</div>\\n</div>\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 59vh\\\">\\n  <aside class=\\\"col-sm-8\\\" >\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Gerenciador Financeiro - Entrar</h5>\\n        <div class=\\\"card-text\\\">\\n          <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleInputEmail1\\\">E-mail</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"Informe o e-mail\\\"/>\\n              <app-form-field-error [form-control]=\\\"form.get('username')\\\"></app-form-field-error>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleInputPassword1\\\">Senha</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"password\\\"  placeholder=\\\"Senha\\\" />\\n              <app-form-field-error [form-control]=\\\"form.get('password')\\\"></app-form-field-error>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" [disabled]=\\\"form.invalid || submitted\\\">Entrar</button>\\n\\n            <div class=\\\"card-text\\\">\\n                Se você não possui uma conta, \\n                <a routerLink=\\\"/login/cadastro\\\">clique aqui</a>\\n            </div>\\n            \\n          </form>\\n        </div>\\n        <div class=\\\"card-text\\\">\\n          <app-server-error-messages [server-error-messages]=\\\"serverErrorMessages\\\"></app-server-error-messages>\\n        </div>\\n      </div>\\n    </div>\\n  </aside>\\n</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2NhZGFzdHJvL2NhZGFzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component } from '@angular/core';\nimport { AuthService } from  '../../../core/servicos/auth.service';\nimport toastr from \"toastr\";\nimport { User } from '../../../core/models/user';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent{\n\n  public form: FormGroup;\n  public submitted: boolean;\n  \n  public serverErrorMessages: string[] = null;\n  \n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder\n  ) { \n    this.setupForm();\n    this.submitted = false;\n  }\n\n\n  public cadastrar() {\n    this.authService.cadastrarForm(this.form.value as User).subscribe(response => {\n      toastr.success('Cadastro realizado com sucesso!');\n\n      //Limpa token e volta para tela de login\n      this.authService.logout();\n    }, error => {\n      this.serverErrorMessages = error.ModelState.erro;\n      toastr.error('Ocorreu um erro ao processar a sua solicitação!');\n    });\n  }\n\n  \n  public validacaoExtra(form: FormGroup){\n    //Confirmação\n    if(form.get('Password').dirty && form.get('Password').value === form.get('ConfirmPassword').value)\n      form.get('ConfirmPassword').setErrors(null)\n    else\n      form.get('ConfirmPassword').setErrors({'mismatch': true});\n  \n    //Requisitos minimos para senha\n    const regex = /^(?=(?:.*?[A-Z]){1})(?=(?:.*?[a-z]){1})(?=(?:.*?[0-9]){1})(?=(?:.*?[!@#$%*()_+^&}{:;?.]){1})(?!.*\\s)[0-9a-zA-Z!@#$%;*(){}_+^&]*$/;\n    if(!regex.exec(form.get('Password').value))\n      form.get('Password').setErrors({'invalidPass': true});\n  }\n\n  private setupForm(){\n    this.form = this.formBuilder.group({\n      Email: [null, [Validators.required, Validators.email]],\n      Password: [null, [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: [null, [Validators.required]]\n    }, { validator: this.validacaoExtra })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { CadastroComponent } from './cadastro/cadastro.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'cadastro', component: CadastroComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { CadastroComponent } from './cadastro/cadastro.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, CadastroComponent],\n  imports: [\n    SharedModule,\n    LoginRoutingModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/servicos/auth.service';\nimport toastr from \"toastr\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  public submitted: boolean;\n  \n  public serverErrorMessages: string[] = null;\n \n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder\n  ) {\n    this.setupForm();\n    this.submitted = false;\n  }\n \n  ngOnInit() {\n    this.authService.logout();\n  }\n \n  public login() {\n    this.authService.loginForm(this.form.value).subscribe(response => {\n        this.authService.setUser(response);\n    }, error => {\n      this.serverErrorMessages = [error.error_description];\n      toastr.error('Ocorreu um erro ao processar a sua solicitação!');\n    });\n  }\n\n  private setupForm(){\n    this.form = this.formBuilder.group({\n      username: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required]]\n    })\n  }\n\n \n}"],"sourceRoot":"webpack:///"}